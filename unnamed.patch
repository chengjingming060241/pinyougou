Index: pinyougou-parent/pinyougou-manager-web/src/main/webapp/js/angular-select2.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pinyougou-parent/pinyougou-manager-web/src/main/webapp/js/angular-select2.js	(date 1494401296768)
+++ pinyougou-parent/pinyougou-manager-web/src/main/webapp/js/angular-select2.js	(date 1494401296768)
@@ -0,0 +1,90 @@
+/**
+ * select2封装
+ * @param {scope} ng-model 选中的ID
+ * @param {scope} select2-model 选中的详细内容
+ * @param {scope} config 自定义配置
+ * @param {String} [query] 内置的配置 (怎么也还得默认一个config)
+ * @example
+ * <input select2 ng-model="a" select2-model="b" config="config" type="text" placeholder="占位符" />
+ * <input select2 ng-model="a" select2-model="b" config="default" query="member" type="text" placeholder="占位符" />
+ * <select select2 ng-model="b" class="form-control"></select>
+ */
+app.directive('select2', function () {
+    return {
+        restrict: 'A',
+        scope: {
+            config: '=',
+            ngModel: '=',
+            select2Model: '='
+        },
+        link: function (scope, element, attrs) {
+            // 初始化
+            var tagName = element[0].tagName,
+                config = {
+                    allowClear: true,
+                    multiple: !!attrs.multiple,
+                    placeholder: attrs.placeholder || ' '   // 修复不出现删除按钮的情况
+                };
+
+            // 生成select
+            if(tagName === 'SELECT') {
+                // 初始化
+                var $element = $(element);
+                delete config.multiple;
+
+                angular.extend(config, scope.config);
+                $element
+                    .prepend('<option value=""></option>')
+                    .val('')
+                    .select2(config);
+
+                // model - view
+                scope.$watch('ngModel', function (newVal) {
+                    setTimeout(function () {
+                        $element.find('[value^="?"]').remove();    // 清除错误的数据
+                        $element.select2('val', newVal);
+                    },0);
+                }, true);
+                return false;
+            }
+
+            // 处理input
+            if(tagName === 'INPUT') {
+                // 初始化
+                var $element = $(element);
+
+                // 获取内置配置
+                if(attrs.query) {
+                    scope.config = select2Query[attrs.query]();
+                }
+
+                // 动态生成select2
+                scope.$watch('config', function () {
+                    angular.extend(config, scope.config);
+                    $element.select2('destroy').select2(config);
+                }, true);
+
+                // view - model
+                $element.on('change', function () {
+                    scope.$apply(function () {
+                        scope.select2Model = $element.select2('data');
+                    });
+                });
+
+                // model - view
+                scope.$watch('select2Model', function (newVal) {
+                    $element.select2('data', newVal);
+                }, true);
+
+                // model - view
+                scope.$watch('ngModel', function (newVal) {
+                    // 跳过ajax方式以及多选情况
+                    if(config.ajax || config.multiple) { return false }
+
+                    $element.select2('val', newVal);
+                }, true);
+            }
+        }
+    }
+});
+//angular.bootstrap(document, ['app']);
Index: pinyougou-parent/pinyougou-pojo/src/main/java/com/pinyougou/pojo/TbSeckillOrder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pinyougou-parent/pinyougou-pojo/src/main/java/com/pinyougou/pojo/TbSeckillOrder.java	(date 1511140333000)
+++ pinyougou-parent/pinyougou-pojo/src/main/java/com/pinyougou/pojo/TbSeckillOrder.java	(date 1511140333000)
@@ -0,0 +1,127 @@
+package com.pinyougou.pojo;
+
+import java.io.Serializable;
+import java.math.BigDecimal;
+import java.util.Date;
+
+public class TbSeckillOrder implements Serializable{
+    private Long id;
+
+    private Long seckillId;
+
+    private BigDecimal money;
+
+    private String userId;
+
+    private String sellerId;
+
+    private Date createTime;
+
+    private Date payTime;
+
+    private String status;
+
+    private String receiverAddress;
+
+    private String receiverMobile;
+
+    private String receiver;
+
+    private String transactionId;
+
+    public Long getId() {
+        return id;
+    }
+
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    public Long getSeckillId() {
+        return seckillId;
+    }
+
+    public void setSeckillId(Long seckillId) {
+        this.seckillId = seckillId;
+    }
+
+    public BigDecimal getMoney() {
+        return money;
+    }
+
+    public void setMoney(BigDecimal money) {
+        this.money = money;
+    }
+
+    public String getUserId() {
+        return userId;
+    }
+
+    public void setUserId(String userId) {
+        this.userId = userId == null ? null : userId.trim();
+    }
+
+    public String getSellerId() {
+        return sellerId;
+    }
+
+    public void setSellerId(String sellerId) {
+        this.sellerId = sellerId == null ? null : sellerId.trim();
+    }
+
+    public Date getCreateTime() {
+        return createTime;
+    }
+
+    public void setCreateTime(Date createTime) {
+        this.createTime = createTime;
+    }
+
+    public Date getPayTime() {
+        return payTime;
+    }
+
+    public void setPayTime(Date payTime) {
+        this.payTime = payTime;
+    }
+
+    public String getStatus() {
+        return status;
+    }
+
+    public void setStatus(String status) {
+        this.status = status == null ? null : status.trim();
+    }
+
+    public String getReceiverAddress() {
+        return receiverAddress;
+    }
+
+    public void setReceiverAddress(String receiverAddress) {
+        this.receiverAddress = receiverAddress == null ? null : receiverAddress.trim();
+    }
+
+    public String getReceiverMobile() {
+        return receiverMobile;
+    }
+
+    public void setReceiverMobile(String receiverMobile) {
+        this.receiverMobile = receiverMobile == null ? null : receiverMobile.trim();
+    }
+
+    public String getReceiver() {
+        return receiver;
+    }
+
+    public void setReceiver(String receiver) {
+        this.receiver = receiver == null ? null : receiver.trim();
+    }
+
+    public String getTransactionId() {
+        return transactionId;
+    }
+
+    public void setTransactionId(String transactionId) {
+        this.transactionId = transactionId == null ? null : transactionId.trim();
+    }
+}
\ No newline at end of file
Index: pinyougou-parent/pinyougou-pojo/src/main/java/com/pinyougou/pojo/TbSeckillOrderExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pinyougou-parent/pinyougou-pojo/src/main/java/com/pinyougou/pojo/TbSeckillOrderExample.java	(date 1511075472000)
+++ pinyougou-parent/pinyougou-pojo/src/main/java/com/pinyougou/pojo/TbSeckillOrderExample.java	(date 1511075472000)
@@ -0,0 +1,992 @@
+package com.pinyougou.pojo;
+
+import java.math.BigDecimal;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+
+public class TbSeckillOrderExample {
+    protected String orderByClause;
+
+    protected boolean distinct;
+
+    protected List<Criteria> oredCriteria;
+
+    public TbSeckillOrderExample() {
+        oredCriteria = new ArrayList<Criteria>();
+    }
+
+    public void setOrderByClause(String orderByClause) {
+        this.orderByClause = orderByClause;
+    }
+
+    public String getOrderByClause() {
+        return orderByClause;
+    }
+
+    public void setDistinct(boolean distinct) {
+        this.distinct = distinct;
+    }
+
+    public boolean isDistinct() {
+        return distinct;
+    }
+
+    public List<Criteria> getOredCriteria() {
+        return oredCriteria;
+    }
+
+    public void or(Criteria criteria) {
+        oredCriteria.add(criteria);
+    }
+
+    public Criteria or() {
+        Criteria criteria = createCriteriaInternal();
+        oredCriteria.add(criteria);
+        return criteria;
+    }
+
+    public Criteria createCriteria() {
+        Criteria criteria = createCriteriaInternal();
+        if (oredCriteria.size() == 0) {
+            oredCriteria.add(criteria);
+        }
+        return criteria;
+    }
+
+    protected Criteria createCriteriaInternal() {
+        Criteria criteria = new Criteria();
+        return criteria;
+    }
+
+    public void clear() {
+        oredCriteria.clear();
+        orderByClause = null;
+        distinct = false;
+    }
+
+    protected abstract static class GeneratedCriteria {
+        protected List<Criterion> criteria;
+
+        protected GeneratedCriteria() {
+            super();
+            criteria = new ArrayList<Criterion>();
+        }
+
+        public boolean isValid() {
+            return criteria.size() > 0;
+        }
+
+        public List<Criterion> getAllCriteria() {
+            return criteria;
+        }
+
+        public List<Criterion> getCriteria() {
+            return criteria;
+        }
+
+        protected void addCriterion(String condition) {
+            if (condition == null) {
+                throw new RuntimeException("Value for condition cannot be null");
+            }
+            criteria.add(new Criterion(condition));
+        }
+
+        protected void addCriterion(String condition, Object value, String property) {
+            if (value == null) {
+                throw new RuntimeException("Value for " + property + " cannot be null");
+            }
+            criteria.add(new Criterion(condition, value));
+        }
+
+        protected void addCriterion(String condition, Object value1, Object value2, String property) {
+            if (value1 == null || value2 == null) {
+                throw new RuntimeException("Between values for " + property + " cannot be null");
+            }
+            criteria.add(new Criterion(condition, value1, value2));
+        }
+
+        public Criteria andIdIsNull() {
+            addCriterion("id is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdIsNotNull() {
+            addCriterion("id is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdEqualTo(Long value) {
+            addCriterion("id =", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotEqualTo(Long value) {
+            addCriterion("id <>", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdGreaterThan(Long value) {
+            addCriterion("id >", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdGreaterThanOrEqualTo(Long value) {
+            addCriterion("id >=", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdLessThan(Long value) {
+            addCriterion("id <", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdLessThanOrEqualTo(Long value) {
+            addCriterion("id <=", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdIn(List<Long> values) {
+            addCriterion("id in", values, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotIn(List<Long> values) {
+            addCriterion("id not in", values, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdBetween(Long value1, Long value2) {
+            addCriterion("id between", value1, value2, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotBetween(Long value1, Long value2) {
+            addCriterion("id not between", value1, value2, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andSeckillIdIsNull() {
+            addCriterion("seckill_id is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andSeckillIdIsNotNull() {
+            addCriterion("seckill_id is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andSeckillIdEqualTo(Long value) {
+            addCriterion("seckill_id =", value, "seckillId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSeckillIdNotEqualTo(Long value) {
+            addCriterion("seckill_id <>", value, "seckillId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSeckillIdGreaterThan(Long value) {
+            addCriterion("seckill_id >", value, "seckillId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSeckillIdGreaterThanOrEqualTo(Long value) {
+            addCriterion("seckill_id >=", value, "seckillId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSeckillIdLessThan(Long value) {
+            addCriterion("seckill_id <", value, "seckillId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSeckillIdLessThanOrEqualTo(Long value) {
+            addCriterion("seckill_id <=", value, "seckillId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSeckillIdIn(List<Long> values) {
+            addCriterion("seckill_id in", values, "seckillId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSeckillIdNotIn(List<Long> values) {
+            addCriterion("seckill_id not in", values, "seckillId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSeckillIdBetween(Long value1, Long value2) {
+            addCriterion("seckill_id between", value1, value2, "seckillId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSeckillIdNotBetween(Long value1, Long value2) {
+            addCriterion("seckill_id not between", value1, value2, "seckillId");
+            return (Criteria) this;
+        }
+
+        public Criteria andMoneyIsNull() {
+            addCriterion("money is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andMoneyIsNotNull() {
+            addCriterion("money is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andMoneyEqualTo(BigDecimal value) {
+            addCriterion("money =", value, "money");
+            return (Criteria) this;
+        }
+
+        public Criteria andMoneyNotEqualTo(BigDecimal value) {
+            addCriterion("money <>", value, "money");
+            return (Criteria) this;
+        }
+
+        public Criteria andMoneyGreaterThan(BigDecimal value) {
+            addCriterion("money >", value, "money");
+            return (Criteria) this;
+        }
+
+        public Criteria andMoneyGreaterThanOrEqualTo(BigDecimal value) {
+            addCriterion("money >=", value, "money");
+            return (Criteria) this;
+        }
+
+        public Criteria andMoneyLessThan(BigDecimal value) {
+            addCriterion("money <", value, "money");
+            return (Criteria) this;
+        }
+
+        public Criteria andMoneyLessThanOrEqualTo(BigDecimal value) {
+            addCriterion("money <=", value, "money");
+            return (Criteria) this;
+        }
+
+        public Criteria andMoneyIn(List<BigDecimal> values) {
+            addCriterion("money in", values, "money");
+            return (Criteria) this;
+        }
+
+        public Criteria andMoneyNotIn(List<BigDecimal> values) {
+            addCriterion("money not in", values, "money");
+            return (Criteria) this;
+        }
+
+        public Criteria andMoneyBetween(BigDecimal value1, BigDecimal value2) {
+            addCriterion("money between", value1, value2, "money");
+            return (Criteria) this;
+        }
+
+        public Criteria andMoneyNotBetween(BigDecimal value1, BigDecimal value2) {
+            addCriterion("money not between", value1, value2, "money");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserIdIsNull() {
+            addCriterion("user_id is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserIdIsNotNull() {
+            addCriterion("user_id is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserIdEqualTo(String value) {
+            addCriterion("user_id =", value, "userId");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserIdNotEqualTo(String value) {
+            addCriterion("user_id <>", value, "userId");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserIdGreaterThan(String value) {
+            addCriterion("user_id >", value, "userId");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
+            addCriterion("user_id >=", value, "userId");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserIdLessThan(String value) {
+            addCriterion("user_id <", value, "userId");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserIdLessThanOrEqualTo(String value) {
+            addCriterion("user_id <=", value, "userId");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserIdLike(String value) {
+            addCriterion("user_id like", value, "userId");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserIdNotLike(String value) {
+            addCriterion("user_id not like", value, "userId");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserIdIn(List<String> values) {
+            addCriterion("user_id in", values, "userId");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserIdNotIn(List<String> values) {
+            addCriterion("user_id not in", values, "userId");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserIdBetween(String value1, String value2) {
+            addCriterion("user_id between", value1, value2, "userId");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserIdNotBetween(String value1, String value2) {
+            addCriterion("user_id not between", value1, value2, "userId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSellerIdIsNull() {
+            addCriterion("seller_id is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andSellerIdIsNotNull() {
+            addCriterion("seller_id is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andSellerIdEqualTo(String value) {
+            addCriterion("seller_id =", value, "sellerId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSellerIdNotEqualTo(String value) {
+            addCriterion("seller_id <>", value, "sellerId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSellerIdGreaterThan(String value) {
+            addCriterion("seller_id >", value, "sellerId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSellerIdGreaterThanOrEqualTo(String value) {
+            addCriterion("seller_id >=", value, "sellerId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSellerIdLessThan(String value) {
+            addCriterion("seller_id <", value, "sellerId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSellerIdLessThanOrEqualTo(String value) {
+            addCriterion("seller_id <=", value, "sellerId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSellerIdLike(String value) {
+            addCriterion("seller_id like", value, "sellerId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSellerIdNotLike(String value) {
+            addCriterion("seller_id not like", value, "sellerId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSellerIdIn(List<String> values) {
+            addCriterion("seller_id in", values, "sellerId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSellerIdNotIn(List<String> values) {
+            addCriterion("seller_id not in", values, "sellerId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSellerIdBetween(String value1, String value2) {
+            addCriterion("seller_id between", value1, value2, "sellerId");
+            return (Criteria) this;
+        }
+
+        public Criteria andSellerIdNotBetween(String value1, String value2) {
+            addCriterion("seller_id not between", value1, value2, "sellerId");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreateTimeIsNull() {
+            addCriterion("create_time is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreateTimeIsNotNull() {
+            addCriterion("create_time is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreateTimeEqualTo(Date value) {
+            addCriterion("create_time =", value, "createTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreateTimeNotEqualTo(Date value) {
+            addCriterion("create_time <>", value, "createTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreateTimeGreaterThan(Date value) {
+            addCriterion("create_time >", value, "createTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
+            addCriterion("create_time >=", value, "createTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreateTimeLessThan(Date value) {
+            addCriterion("create_time <", value, "createTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
+            addCriterion("create_time <=", value, "createTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreateTimeIn(List<Date> values) {
+            addCriterion("create_time in", values, "createTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreateTimeNotIn(List<Date> values) {
+            addCriterion("create_time not in", values, "createTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreateTimeBetween(Date value1, Date value2) {
+            addCriterion("create_time between", value1, value2, "createTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
+            addCriterion("create_time not between", value1, value2, "createTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andPayTimeIsNull() {
+            addCriterion("pay_time is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andPayTimeIsNotNull() {
+            addCriterion("pay_time is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andPayTimeEqualTo(Date value) {
+            addCriterion("pay_time =", value, "payTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andPayTimeNotEqualTo(Date value) {
+            addCriterion("pay_time <>", value, "payTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andPayTimeGreaterThan(Date value) {
+            addCriterion("pay_time >", value, "payTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andPayTimeGreaterThanOrEqualTo(Date value) {
+            addCriterion("pay_time >=", value, "payTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andPayTimeLessThan(Date value) {
+            addCriterion("pay_time <", value, "payTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andPayTimeLessThanOrEqualTo(Date value) {
+            addCriterion("pay_time <=", value, "payTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andPayTimeIn(List<Date> values) {
+            addCriterion("pay_time in", values, "payTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andPayTimeNotIn(List<Date> values) {
+            addCriterion("pay_time not in", values, "payTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andPayTimeBetween(Date value1, Date value2) {
+            addCriterion("pay_time between", value1, value2, "payTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andPayTimeNotBetween(Date value1, Date value2) {
+            addCriterion("pay_time not between", value1, value2, "payTime");
+            return (Criteria) this;
+        }
+
+        public Criteria andStatusIsNull() {
+            addCriterion("status is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andStatusIsNotNull() {
+            addCriterion("status is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andStatusEqualTo(String value) {
+            addCriterion("status =", value, "status");
+            return (Criteria) this;
+        }
+
+        public Criteria andStatusNotEqualTo(String value) {
+            addCriterion("status <>", value, "status");
+            return (Criteria) this;
+        }
+
+        public Criteria andStatusGreaterThan(String value) {
+            addCriterion("status >", value, "status");
+            return (Criteria) this;
+        }
+
+        public Criteria andStatusGreaterThanOrEqualTo(String value) {
+            addCriterion("status >=", value, "status");
+            return (Criteria) this;
+        }
+
+        public Criteria andStatusLessThan(String value) {
+            addCriterion("status <", value, "status");
+            return (Criteria) this;
+        }
+
+        public Criteria andStatusLessThanOrEqualTo(String value) {
+            addCriterion("status <=", value, "status");
+            return (Criteria) this;
+        }
+
+        public Criteria andStatusLike(String value) {
+            addCriterion("status like", value, "status");
+            return (Criteria) this;
+        }
+
+        public Criteria andStatusNotLike(String value) {
+            addCriterion("status not like", value, "status");
+            return (Criteria) this;
+        }
+
+        public Criteria andStatusIn(List<String> values) {
+            addCriterion("status in", values, "status");
+            return (Criteria) this;
+        }
+
+        public Criteria andStatusNotIn(List<String> values) {
+            addCriterion("status not in", values, "status");
+            return (Criteria) this;
+        }
+
+        public Criteria andStatusBetween(String value1, String value2) {
+            addCriterion("status between", value1, value2, "status");
+            return (Criteria) this;
+        }
+
+        public Criteria andStatusNotBetween(String value1, String value2) {
+            addCriterion("status not between", value1, value2, "status");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverAddressIsNull() {
+            addCriterion("receiver_address is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverAddressIsNotNull() {
+            addCriterion("receiver_address is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverAddressEqualTo(String value) {
+            addCriterion("receiver_address =", value, "receiverAddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverAddressNotEqualTo(String value) {
+            addCriterion("receiver_address <>", value, "receiverAddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverAddressGreaterThan(String value) {
+            addCriterion("receiver_address >", value, "receiverAddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverAddressGreaterThanOrEqualTo(String value) {
+            addCriterion("receiver_address >=", value, "receiverAddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverAddressLessThan(String value) {
+            addCriterion("receiver_address <", value, "receiverAddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverAddressLessThanOrEqualTo(String value) {
+            addCriterion("receiver_address <=", value, "receiverAddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverAddressLike(String value) {
+            addCriterion("receiver_address like", value, "receiverAddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverAddressNotLike(String value) {
+            addCriterion("receiver_address not like", value, "receiverAddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverAddressIn(List<String> values) {
+            addCriterion("receiver_address in", values, "receiverAddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverAddressNotIn(List<String> values) {
+            addCriterion("receiver_address not in", values, "receiverAddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverAddressBetween(String value1, String value2) {
+            addCriterion("receiver_address between", value1, value2, "receiverAddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverAddressNotBetween(String value1, String value2) {
+            addCriterion("receiver_address not between", value1, value2, "receiverAddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverMobileIsNull() {
+            addCriterion("receiver_mobile is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverMobileIsNotNull() {
+            addCriterion("receiver_mobile is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverMobileEqualTo(String value) {
+            addCriterion("receiver_mobile =", value, "receiverMobile");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverMobileNotEqualTo(String value) {
+            addCriterion("receiver_mobile <>", value, "receiverMobile");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverMobileGreaterThan(String value) {
+            addCriterion("receiver_mobile >", value, "receiverMobile");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverMobileGreaterThanOrEqualTo(String value) {
+            addCriterion("receiver_mobile >=", value, "receiverMobile");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverMobileLessThan(String value) {
+            addCriterion("receiver_mobile <", value, "receiverMobile");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverMobileLessThanOrEqualTo(String value) {
+            addCriterion("receiver_mobile <=", value, "receiverMobile");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverMobileLike(String value) {
+            addCriterion("receiver_mobile like", value, "receiverMobile");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverMobileNotLike(String value) {
+            addCriterion("receiver_mobile not like", value, "receiverMobile");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverMobileIn(List<String> values) {
+            addCriterion("receiver_mobile in", values, "receiverMobile");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverMobileNotIn(List<String> values) {
+            addCriterion("receiver_mobile not in", values, "receiverMobile");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverMobileBetween(String value1, String value2) {
+            addCriterion("receiver_mobile between", value1, value2, "receiverMobile");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverMobileNotBetween(String value1, String value2) {
+            addCriterion("receiver_mobile not between", value1, value2, "receiverMobile");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverIsNull() {
+            addCriterion("receiver is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverIsNotNull() {
+            addCriterion("receiver is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverEqualTo(String value) {
+            addCriterion("receiver =", value, "receiver");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverNotEqualTo(String value) {
+            addCriterion("receiver <>", value, "receiver");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverGreaterThan(String value) {
+            addCriterion("receiver >", value, "receiver");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverGreaterThanOrEqualTo(String value) {
+            addCriterion("receiver >=", value, "receiver");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverLessThan(String value) {
+            addCriterion("receiver <", value, "receiver");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverLessThanOrEqualTo(String value) {
+            addCriterion("receiver <=", value, "receiver");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverLike(String value) {
+            addCriterion("receiver like", value, "receiver");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverNotLike(String value) {
+            addCriterion("receiver not like", value, "receiver");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverIn(List<String> values) {
+            addCriterion("receiver in", values, "receiver");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverNotIn(List<String> values) {
+            addCriterion("receiver not in", values, "receiver");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverBetween(String value1, String value2) {
+            addCriterion("receiver between", value1, value2, "receiver");
+            return (Criteria) this;
+        }
+
+        public Criteria andReceiverNotBetween(String value1, String value2) {
+            addCriterion("receiver not between", value1, value2, "receiver");
+            return (Criteria) this;
+        }
+
+        public Criteria andTransactionIdIsNull() {
+            addCriterion("transaction_id is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andTransactionIdIsNotNull() {
+            addCriterion("transaction_id is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andTransactionIdEqualTo(String value) {
+            addCriterion("transaction_id =", value, "transactionId");
+            return (Criteria) this;
+        }
+
+        public Criteria andTransactionIdNotEqualTo(String value) {
+            addCriterion("transaction_id <>", value, "transactionId");
+            return (Criteria) this;
+        }
+
+        public Criteria andTransactionIdGreaterThan(String value) {
+            addCriterion("transaction_id >", value, "transactionId");
+            return (Criteria) this;
+        }
+
+        public Criteria andTransactionIdGreaterThanOrEqualTo(String value) {
+            addCriterion("transaction_id >=", value, "transactionId");
+            return (Criteria) this;
+        }
+
+        public Criteria andTransactionIdLessThan(String value) {
+            addCriterion("transaction_id <", value, "transactionId");
+            return (Criteria) this;
+        }
+
+        public Criteria andTransactionIdLessThanOrEqualTo(String value) {
+            addCriterion("transaction_id <=", value, "transactionId");
+            return (Criteria) this;
+        }
+
+        public Criteria andTransactionIdLike(String value) {
+            addCriterion("transaction_id like", value, "transactionId");
+            return (Criteria) this;
+        }
+
+        public Criteria andTransactionIdNotLike(String value) {
+            addCriterion("transaction_id not like", value, "transactionId");
+            return (Criteria) this;
+        }
+
+        public Criteria andTransactionIdIn(List<String> values) {
+            addCriterion("transaction_id in", values, "transactionId");
+            return (Criteria) this;
+        }
+
+        public Criteria andTransactionIdNotIn(List<String> values) {
+            addCriterion("transaction_id not in", values, "transactionId");
+            return (Criteria) this;
+        }
+
+        public Criteria andTransactionIdBetween(String value1, String value2) {
+            addCriterion("transaction_id between", value1, value2, "transactionId");
+            return (Criteria) this;
+        }
+
+        public Criteria andTransactionIdNotBetween(String value1, String value2) {
+            addCriterion("transaction_id not between", value1, value2, "transactionId");
+            return (Criteria) this;
+        }
+    }
+
+    public static class Criteria extends GeneratedCriteria {
+
+        protected Criteria() {
+            super();
+        }
+    }
+
+    public static class Criterion {
+        private String condition;
+
+        private Object value;
+
+        private Object secondValue;
+
+        private boolean noValue;
+
+        private boolean singleValue;
+
+        private boolean betweenValue;
+
+        private boolean listValue;
+
+        private String typeHandler;
+
+        public String getCondition() {
+            return condition;
+        }
+
+        public Object getValue() {
+            return value;
+        }
+
+        public Object getSecondValue() {
+            return secondValue;
+        }
+
+        public boolean isNoValue() {
+            return noValue;
+        }
+
+        public boolean isSingleValue() {
+            return singleValue;
+        }
+
+        public boolean isBetweenValue() {
+            return betweenValue;
+        }
+
+        public boolean isListValue() {
+            return listValue;
+        }
+
+        public String getTypeHandler() {
+            return typeHandler;
+        }
+
+        protected Criterion(String condition) {
+            super();
+            this.condition = condition;
+            this.typeHandler = null;
+            this.noValue = true;
+        }
+
+        protected Criterion(String condition, Object value, String typeHandler) {
+            super();
+            this.condition = condition;
+            this.value = value;
+            this.typeHandler = typeHandler;
+            if (value instanceof List<?>) {
+                this.listValue = true;
+            } else {
+                this.singleValue = true;
+            }
+        }
+
+        protected Criterion(String condition, Object value) {
+            this(condition, value, null);
+        }
+
+        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
+            super();
+            this.condition = condition;
+            this.value = value;
+            this.secondValue = secondValue;
+            this.typeHandler = typeHandler;
+            this.betweenValue = true;
+        }
+
+        protected Criterion(String condition, Object value, Object secondValue) {
+            this(condition, value, secondValue, null);
+        }
+    }
+}
\ No newline at end of file
Index: pinyougou-parent/pinyougou-dao/src/main/java/com/pinyougou/mapper/TbSeckillOrderMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pinyougou-parent/pinyougou-dao/src/main/java/com/pinyougou/mapper/TbSeckillOrderMapper.java	(date 1511075472000)
+++ pinyougou-parent/pinyougou-dao/src/main/java/com/pinyougou/mapper/TbSeckillOrderMapper.java	(date 1511075472000)
@@ -0,0 +1,30 @@
+package com.pinyougou.mapper;
+
+import com.pinyougou.pojo.TbSeckillOrder;
+import com.pinyougou.pojo.TbSeckillOrderExample;
+import java.util.List;
+import org.apache.ibatis.annotations.Param;
+
+public interface TbSeckillOrderMapper {
+    int countByExample(TbSeckillOrderExample example);
+
+    int deleteByExample(TbSeckillOrderExample example);
+
+    int deleteByPrimaryKey(Long id);
+
+    int insert(TbSeckillOrder record);
+
+    int insertSelective(TbSeckillOrder record);
+
+    List<TbSeckillOrder> selectByExample(TbSeckillOrderExample example);
+
+    TbSeckillOrder selectByPrimaryKey(Long id);
+
+    int updateByExampleSelective(@Param("record") TbSeckillOrder record, @Param("example") TbSeckillOrderExample example);
+
+    int updateByExample(@Param("record") TbSeckillOrder record, @Param("example") TbSeckillOrderExample example);
+
+    int updateByPrimaryKeySelective(TbSeckillOrder record);
+
+    int updateByPrimaryKey(TbSeckillOrder record);
+}
\ No newline at end of file
Index: pinyougou-parent/pinyougou-pojo/src/main/java/com/pinyougou/pojogroup/Specification.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pinyougou-parent/pinyougou-pojo/src/main/java/com/pinyougou/pojogroup/Specification.java	(date 1552534789240)
+++ pinyougou-parent/pinyougou-pojo/src/main/java/com/pinyougou/pojogroup/Specification.java	(date 1552534789240)
@@ -0,0 +1,32 @@
+package com.pinyougou.pojogroup;
+
+import com.pinyougou.pojo.TbSpecification;
+import com.pinyougou.pojo.TbSpecificationOption;
+
+import java.io.Serializable;
+import java.util.List;
+
+/**
+ * 规格组合实体类
+ */
+public class Specification implements Serializable {
+    private TbSpecification specification;
+
+    private List<TbSpecificationOption> specificationOptionList;
+
+    public TbSpecification getSpecification() {
+        return specification;
+    }
+
+    public void setSpecification(TbSpecification specification) {
+        this.specification = specification;
+    }
+
+    public List<TbSpecificationOption> getSpecificationOptionList() {
+        return specificationOptionList;
+    }
+
+    public void setSpecificationOptionList(List<TbSpecificationOption> specificationOptionList) {
+        this.specificationOptionList = specificationOptionList;
+    }
+}
Index: pinyougou-parent/pinyougou-manager-web/src/main/java/com/pinyougou/manager/controller/SeckillOrderController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pinyougou-parent/pinyougou-manager-web/src/main/java/com/pinyougou/manager/controller/SeckillOrderController.java	(date 1552528311609)
+++ pinyougou-parent/pinyougou-manager-web/src/main/java/com/pinyougou/manager/controller/SeckillOrderController.java	(date 1552528311609)
@@ -0,0 +1,114 @@
+package com.pinyougou.manager.controller;
+import java.util.List;
+
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+import com.alibaba.dubbo.config.annotation.Reference;
+import com.pinyougou.pojo.TbSeckillOrder;
+import com.pinyougou.sellergoods.service.SeckillOrderService;
+
+import entity.PageResult;
+import entity.Result;
+/**
+ * controller
+ * @author Administrator
+ *
+ */
+@RestController
+@RequestMapping("/seckillOrder")
+public class SeckillOrderController {
+
+	@Reference
+	private SeckillOrderService seckillOrderService;
+	
+	/**
+	 * 返回全部列表
+	 * @return
+	 */
+	@RequestMapping("/findAll")
+	public List<TbSeckillOrder> findAll(){			
+		return seckillOrderService.findAll();
+	}
+	
+	
+	/**
+	 * 返回全部列表
+	 * @return
+	 */
+	@RequestMapping("/findPage")
+	public PageResult  findPage(int page,int rows){			
+		return seckillOrderService.findPage(page, rows);
+	}
+	
+	/**
+	 * 增加
+	 * @param seckillOrder
+	 * @return
+	 */
+	@RequestMapping("/add")
+	public Result add(@RequestBody TbSeckillOrder seckillOrder){
+		try {
+			seckillOrderService.add(seckillOrder);
+			return new Result(true, "增加成功");
+		} catch (Exception e) {
+			e.printStackTrace();
+			return new Result(false, "增加失败");
+		}
+	}
+	
+	/**
+	 * 修改
+	 * @param seckillOrder
+	 * @return
+	 */
+	@RequestMapping("/update")
+	public Result update(@RequestBody TbSeckillOrder seckillOrder){
+		try {
+			seckillOrderService.update(seckillOrder);
+			return new Result(true, "修改成功");
+		} catch (Exception e) {
+			e.printStackTrace();
+			return new Result(false, "修改失败");
+		}
+	}	
+	
+	/**
+	 * 获取实体
+	 * @param id
+	 * @return
+	 */
+	@RequestMapping("/findOne")
+	public TbSeckillOrder findOne(Long id){
+		return seckillOrderService.findOne(id);		
+	}
+	
+	/**
+	 * 批量删除
+	 * @param ids
+	 * @return
+	 */
+	@RequestMapping("/delete")
+	public Result delete(Long [] ids){
+		try {
+			seckillOrderService.delete(ids);
+			return new Result(true, "删除成功"); 
+		} catch (Exception e) {
+			e.printStackTrace();
+			return new Result(false, "删除失败");
+		}
+	}
+	
+		/**
+	 * 查询+分页
+	 * @param brand
+	 * @param page
+	 * @param rows
+	 * @return
+	 */
+	@RequestMapping("/search")
+	public PageResult search(@RequestBody TbSeckillOrder seckillOrder, int page, int rows  ){
+		return seckillOrderService.findPage(seckillOrder, page, rows);		
+	}
+	
+}
Index: pinyougou-parent/pinyougou-sellergoods-interface/src/main/java/com/pinyougou/sellergoods/service/TypeTemplateService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pinyougou-parent/pinyougou-sellergoods-interface/src/main/java/com/pinyougou/sellergoods/service/TypeTemplateService.java	(date 1552545902525)
+++ pinyougou-parent/pinyougou-sellergoods-interface/src/main/java/com/pinyougou/sellergoods/service/TypeTemplateService.java	(date 1552545902525)
@@ -0,0 +1,65 @@
+package com.pinyougou.sellergoods.service;
+import java.util.List;
+import java.util.Map;
+
+import com.pinyougou.pojo.TbTypeTemplate;
+
+import entity.PageResult;
+/**
+ * 服务层接口
+ * @author Administrator
+ *
+ */
+public interface TypeTemplateService {
+
+	/**
+	 * 返回全部列表
+	 * @return
+	 */
+	public List<TbTypeTemplate> findAll();
+	
+	
+	/**
+	 * 返回分页列表
+	 * @return
+	 */
+	public PageResult findPage(int pageNum, int pageSize);
+	
+	
+	/**
+	 * 增加
+	*/
+	public void add(TbTypeTemplate typeTemplate);
+	
+	
+	/**
+	 * 修改
+	 */
+	public void update(TbTypeTemplate typeTemplate);
+	
+
+	/**
+	 * 根据ID获取实体
+	 * @param id
+	 * @return
+	 */
+	public TbTypeTemplate findOne(Long id);
+	
+	
+	/**
+	 * 批量删除
+	 * @param ids
+	 */
+	public void delete(Long[] ids);
+
+	/**
+	 * 分页
+	 * @param pageNum 当前页 码
+	 * @param pageSize 每页记录数
+	 * @return
+	 */
+	public PageResult findPage(TbTypeTemplate typeTemplate, int pageNum, int pageSize);
+	
+
+	
+}
Index: pinyougou-parent/pinyougou-manager-web/src/main/java/com/pinyougou/manager/controller/TypeTemplateController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pinyougou-parent/pinyougou-manager-web/src/main/java/com/pinyougou/manager/controller/TypeTemplateController.java	(date 1552546046490)
+++ pinyougou-parent/pinyougou-manager-web/src/main/java/com/pinyougou/manager/controller/TypeTemplateController.java	(date 1552546046490)
@@ -0,0 +1,117 @@
+package com.pinyougou.manager.controller;
+import java.util.List;
+import java.util.Map;
+
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+import com.alibaba.dubbo.config.annotation.Reference;
+import com.pinyougou.pojo.TbTypeTemplate;
+import com.pinyougou.sellergoods.service.TypeTemplateService;
+
+import entity.PageResult;
+import entity.Result;
+/**
+ * controller
+ * @author Administrator
+ *
+ */
+@RestController
+@RequestMapping("/typeTemplate")
+public class TypeTemplateController {
+
+	@Reference
+	private TypeTemplateService typeTemplateService;
+	
+	/**
+	 * 返回全部列表
+	 * @return
+	 */
+	@RequestMapping("/findAll")
+	public List<TbTypeTemplate> findAll(){			
+		return typeTemplateService.findAll();
+	}
+	
+	
+	/**
+	 * 返回全部列表
+	 * @return
+	 */
+	@RequestMapping("/findPage")
+	public PageResult  findPage(int page,int rows){			
+		return typeTemplateService.findPage(page, rows);
+	}
+	
+	/**
+	 * 增加
+	 * @param typeTemplate
+	 * @return
+	 */
+	@RequestMapping("/add")
+	public Result add(@RequestBody TbTypeTemplate typeTemplate){
+		try {
+			typeTemplateService.add(typeTemplate);
+			return new Result(true, "增加成功");
+		} catch (Exception e) {
+			e.printStackTrace();
+			return new Result(false, "增加失败");
+		}
+	}
+	
+	/**
+	 * 修改
+	 * @param typeTemplate
+	 * @return
+	 */
+	@RequestMapping("/update")
+	public Result update(@RequestBody TbTypeTemplate typeTemplate){
+		try {
+			typeTemplateService.update(typeTemplate);
+			return new Result(true, "修改成功");
+		} catch (Exception e) {
+			e.printStackTrace();
+			return new Result(false, "修改失败");
+		}
+	}	
+	
+	/**
+	 * 获取实体
+	 * @param id
+	 * @return
+	 */
+	@RequestMapping("/findOne")
+	public TbTypeTemplate findOne(Long id){
+		return typeTemplateService.findOne(id);		
+	}
+	
+	/**
+	 * 批量删除
+	 * @param ids
+	 * @return
+	 */
+	@RequestMapping("/delete")
+	public Result delete(Long [] ids){
+		try {
+			typeTemplateService.delete(ids);
+			return new Result(true, "删除成功"); 
+		} catch (Exception e) {
+			e.printStackTrace();
+			return new Result(false, "删除失败");
+		}
+	}
+	
+		/**
+	 * 查询+分页
+	 * @param
+	 * @param page
+	 * @param rows
+	 * @return
+	 */
+	@RequestMapping("/search")
+	public PageResult search(@RequestBody TbTypeTemplate typeTemplate, int page, int rows  ){
+		return typeTemplateService.findPage(typeTemplate, page, rows);		
+	}
+	
+
+	
+}
Index: pinyougou-parent/pinyougou-sellergoods-service/src/main/java/com/pinyougou/sellergoods/service/impl/TypeTemplateServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pinyougou-parent/pinyougou-sellergoods-service/src/main/java/com/pinyougou/sellergoods/service/impl/TypeTemplateServiceImpl.java	(date 1505709761000)
+++ pinyougou-parent/pinyougou-sellergoods-service/src/main/java/com/pinyougou/sellergoods/service/impl/TypeTemplateServiceImpl.java	(date 1505709761000)
@@ -0,0 +1,112 @@
+package com.pinyougou.sellergoods.service.impl;
+import java.util.List;
+import java.util.Map;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import com.alibaba.dubbo.config.annotation.Service;
+import com.github.pagehelper.Page;
+import com.github.pagehelper.PageHelper;
+import com.pinyougou.mapper.TbTypeTemplateMapper;
+import com.pinyougou.pojo.TbTypeTemplate;
+import com.pinyougou.pojo.TbTypeTemplateExample;
+import com.pinyougou.pojo.TbTypeTemplateExample.Criteria;
+import com.pinyougou.sellergoods.service.TypeTemplateService;
+
+import entity.PageResult;
+
+/**
+ * 服务实现层
+ * @author Administrator
+ *
+ */
+@Service
+public class TypeTemplateServiceImpl implements TypeTemplateService {
+
+	@Autowired
+	private TbTypeTemplateMapper typeTemplateMapper;
+	
+	/**
+	 * 查询全部
+	 */
+	@Override
+	public List<TbTypeTemplate> findAll() {
+		return typeTemplateMapper.selectByExample(null);
+	}
+
+	/**
+	 * 按分页查询
+	 */
+	@Override
+	public PageResult findPage(int pageNum, int pageSize) {
+		PageHelper.startPage(pageNum, pageSize);		
+		Page<TbTypeTemplate> page=   (Page<TbTypeTemplate>) typeTemplateMapper.selectByExample(null);
+		return new PageResult(page.getTotal(), page.getResult());
+	}
+
+	/**
+	 * 增加
+	 */
+	@Override
+	public void add(TbTypeTemplate typeTemplate) {
+		typeTemplateMapper.insert(typeTemplate);		
+	}
+
+	
+	/**
+	 * 修改
+	 */
+	@Override
+	public void update(TbTypeTemplate typeTemplate){
+		typeTemplateMapper.updateByPrimaryKey(typeTemplate);
+	}	
+	
+	/**
+	 * 根据ID获取实体
+	 * @param id
+	 * @return
+	 */
+	@Override
+	public TbTypeTemplate findOne(Long id){
+		return typeTemplateMapper.selectByPrimaryKey(id);
+	}
+
+	/**
+	 * 批量删除
+	 */
+	@Override
+	public void delete(Long[] ids) {
+		for(Long id:ids){
+			typeTemplateMapper.deleteByPrimaryKey(id);
+		}		
+	}
+	
+	
+		@Override
+	public PageResult findPage(TbTypeTemplate typeTemplate, int pageNum, int pageSize) {
+		PageHelper.startPage(pageNum, pageSize);
+		
+		TbTypeTemplateExample example=new TbTypeTemplateExample();
+		Criteria criteria = example.createCriteria();
+		
+		if(typeTemplate!=null){			
+						if(typeTemplate.getName()!=null && typeTemplate.getName().length()>0){
+				criteria.andNameLike("%"+typeTemplate.getName()+"%");
+			}
+			if(typeTemplate.getSpecIds()!=null && typeTemplate.getSpecIds().length()>0){
+				criteria.andSpecIdsLike("%"+typeTemplate.getSpecIds()+"%");
+			}
+			if(typeTemplate.getBrandIds()!=null && typeTemplate.getBrandIds().length()>0){
+				criteria.andBrandIdsLike("%"+typeTemplate.getBrandIds()+"%");
+			}
+			if(typeTemplate.getCustomAttributeItems()!=null && typeTemplate.getCustomAttributeItems().length()>0){
+				criteria.andCustomAttributeItemsLike("%"+typeTemplate.getCustomAttributeItems()+"%");
+			}
+	
+		}
+		
+		Page<TbTypeTemplate> page= (Page<TbTypeTemplate>)typeTemplateMapper.selectByExample(example);		
+		return new PageResult(page.getTotal(), page.getResult());
+	}
+
+
+}
Index: pinyougou-parent/pinyougou-sellergoods-interface/src/main/java/com/pinyougou/sellergoods/service/SeckillOrderService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pinyougou-parent/pinyougou-sellergoods-interface/src/main/java/com/pinyougou/sellergoods/service/SeckillOrderService.java	(date 1552526041382)
+++ pinyougou-parent/pinyougou-sellergoods-interface/src/main/java/com/pinyougou/sellergoods/service/SeckillOrderService.java	(date 1552526041382)
@@ -0,0 +1,61 @@
+package com.pinyougou.sellergoods.service;
+import java.util.List;
+import com.pinyougou.pojo.TbSeckillOrder;
+
+import entity.PageResult;
+/**
+ * 服务层接口
+ * @author Administrator
+ *
+ */
+public interface SeckillOrderService {
+
+	/**
+	 * 返回全部列表
+	 * @return
+	 */
+	public List<TbSeckillOrder> findAll();
+	
+	
+	/**
+	 * 返回分页列表
+	 * @return
+	 */
+	public PageResult findPage(int pageNum, int pageSize);
+	
+	
+	/**
+	 * 增加
+	*/
+	public void add(TbSeckillOrder seckillOrder);
+	
+	
+	/**
+	 * 修改
+	 */
+	public void update(TbSeckillOrder seckillOrder);
+	
+
+	/**
+	 * 根据ID获取实体
+	 * @param id
+	 * @return
+	 */
+	public TbSeckillOrder findOne(Long id);
+	
+	
+	/**
+	 * 批量删除
+	 * @param ids
+	 */
+	public void delete(Long[] ids);
+
+	/**
+	 * 分页
+	 * @param pageNum 当前页 码
+	 * @param pageSize 每页记录数
+	 * @return
+	 */
+	public PageResult findPage(TbSeckillOrder seckillOrder, int pageNum, int pageSize);
+	
+}
